{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\project\\\\src\\\\shapes.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initialShapes = [{\n  id: 0,\n  type: \"circle\",\n  x: 50,\n  y: 100\n}, {\n  id: 1,\n  type: \"square\",\n  x: 150,\n  y: 100\n}, {\n  id: 2,\n  type: \"circle\",\n  x: 250,\n  y: 100\n}];\nexport default function ShapeEditor() {\n  _s();\n  const [shapes, setShapes] = useState(initialShapes);\n  function handleCircle() {\n    const nextShape = shapes.map(shape => {\n      if (shape.type === \"circle\") {\n        return {\n          ...shape,\n          y: shape.y + 50\n        };\n      }\n    });\n    setShapes(nextShape);\n  }\n  function handleSquare() {\n    const nextShape = shapes.map(shape => {\n      if (shape.type === \"square\") {\n        return {\n          ...shape,\n          x: shape.x + 5\n        };\n      }\n    });\n    setShapes(nextShape);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCircle,\n      children: \"Move circles 50 px down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSquare,\n      children: \"Move square 5 px left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), shapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"purple\",\n        position: \"absolute\",\n        left: shape.x,\n        top: shape.y,\n        borderRadius: shape.type === \"circle\" ? \"50%\" : \"\",\n        width: 20,\n        height: 20\n      }\n    }, shape.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(ShapeEditor, \"L9yGHPKUlu2TLL3zMIv0KwdtW9c=\");\n_c = ShapeEditor;\nvar _c;\n$RefreshReg$(_c, \"ShapeEditor\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialShapes","id","type","x","y","ShapeEditor","_s","shapes","setShapes","handleCircle","nextShape","map","shape","handleSquare","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","background","position","left","top","borderRadius","width","height","_c","$RefreshReg$"],"sources":["D:/react/project/src/shapes.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nlet initialShapes = [\r\n  { id: 0, type: \"circle\", x: 50, y: 100 },\r\n  { id: 1, type: \"square\", x: 150, y: 100 },\r\n  { id: 2, type: \"circle\", x: 250, y: 100 },\r\n];\r\n\r\nexport default function ShapeEditor() {\r\n  const [shapes, setShapes] = useState(initialShapes);\r\n\r\n  function handleCircle() {\r\n    const nextShape = shapes.map((shape) => {\r\n      if (shape.type === \"circle\") {\r\n        return { ...shape, y: shape.y + 50 };\r\n      }\r\n    });\r\n\r\n    setShapes(nextShape);\r\n  }\r\n  function handleSquare() {\r\n    const nextShape = shapes.map((shape) => {\r\n      if (shape.type === \"square\") {\r\n        return { ...shape, x: shape.x + 5 };\r\n      }\r\n    });\r\n\r\n    setShapes(nextShape);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleCircle}>Move circles 50 px down</button>\r\n      <button onClick={handleSquare}>Move square 5 px left</button>\r\n      {shapes.map((shape) => (\r\n        <div\r\n          key={shape.id}\r\n          style={{\r\n            background: \"purple\",\r\n            position: \"absolute\",\r\n            left: shape.x,\r\n            top: shape.y,\r\n            borderRadius: shape.type === \"circle\" ? \"50%\" : \"\",\r\n            width: 20,\r\n            height: 20,\r\n          }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,IAAIC,aAAa,GAAG,CAClB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,CAAC,EAAE,EAAE;EAAEC,CAAC,EAAE;AAAI,CAAC,EACxC;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,EACzC;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,CAC1C;AAED,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACK,aAAa,CAAC;EAEnD,SAASS,YAAYA,CAAA,EAAG;IACtB,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAK;MACtC,IAAIA,KAAK,CAACV,IAAI,KAAK,QAAQ,EAAE;QAC3B,OAAO;UAAE,GAAGU,KAAK;UAAER,CAAC,EAAEQ,KAAK,CAACR,CAAC,GAAG;QAAG,CAAC;MACtC;IACF,CAAC,CAAC;IAEFI,SAAS,CAACE,SAAS,CAAC;EACtB;EACA,SAASG,YAAYA,CAAA,EAAG;IACtB,MAAMH,SAAS,GAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,IAAK;MACtC,IAAIA,KAAK,CAACV,IAAI,KAAK,QAAQ,EAAE;QAC3B,OAAO;UAAE,GAAGU,KAAK;UAAET,CAAC,EAAES,KAAK,CAACT,CAAC,GAAG;QAAE,CAAC;MACrC;IACF,CAAC,CAAC;IAEFK,SAAS,CAACE,SAAS,CAAC;EACtB;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAEN,YAAa;MAAAK,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC/DtB,OAAA;MAAQkB,OAAO,EAAEF,YAAa;MAAAC,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAC5DZ,MAAM,CAACI,GAAG,CAAEC,KAAK,iBAChBf,OAAA;MAEEuB,KAAK,EAAE;QACLC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAEX,KAAK,CAACT,CAAC;QACbqB,GAAG,EAAEZ,KAAK,CAACR,CAAC;QACZqB,YAAY,EAAEb,KAAK,CAACV,IAAI,KAAK,QAAQ,GAAG,KAAK,GAAG,EAAE;QAClDwB,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE;MACV;IAAE,GATGf,KAAK,CAACX,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAWhB,CAAC;EAAA,gBACD;AAEP;AAACb,EAAA,CA1CuBD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}